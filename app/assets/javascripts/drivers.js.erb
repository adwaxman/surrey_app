$(document).ready(function() {
  $('input').change(function(event) {
    if (Date.parse("1-1-2000 " + $('.monday_min').val()) > Date.parse("1-1-2000 " + $('.monday_max').val())) {
      alert("End time on Monday cannot be earlier than start time");
    }
  });
  $('input').change(function(event) {
    if (Date.parse("1-1-2000 " + $('.tuesday_min').val()) > Date.parse("1-1-2000 " + $('.tuesday_max').val())) {
      alert("End time on Tuesday cannot be earlier than start time");
    }
  });
  $('input').change(function(event) {
    if (Date.parse("1-1-2000 " + $('.wednesday_min').val()) > Date.parse("1-1-2000 " + $('.wednesday_max').val())) {
      alert("End time on Wednesday cannot be earlier than start time");
    }
  });
  $('input').change(function(event) {
    if (Date.parse("1-1-2000 " + $('.thursday_min').val()) > Date.parse("1-1-2000 " + $('.thursday_max').val())) {
      alert("End time on Thursday cannot be earlier than start time");
    }
  });
  $('input').change(function(event) {
    if (Date.parse("1-1-2000 " + $('.friday_min').val()) > Date.parse("1-1-2000 " + $('.friday_max').val())) {
      alert("End time on Friday cannot be earlier than start time");
    }
  });

  if ($('.disable1').val() == "") {

    $('.disable1').attr('disabled', true);

  }

  if ($('.disable2').val() == "") {

    $('.disable2').attr('disabled', true);

  }
  if ($('.disable3').val() == "") {

    $('.disable3').attr('disabled', true);

  }
  if ($('.disable4').val() == "") {

    $('.disable4').attr('disabled', true);

  }
  if ($('.disable5').val() == "") {

    $('.disable5').attr('disabled', true);

  }

  // disable time inputs if volunteer unavailable
  $('.check1').on('click', function(event) {

    if ($(this).is(":checked")) {
      $('.disable1').attr('disabled', false);
    } else {
      {
        $('.disable1').attr('disabled', true);
        $('.disable1').val("");
      }
    }
  });
  $('.check2').on('click', function(event) {

    if ($(this).is(":checked")) {
      $('.disable2').attr('disabled', false);
    } else {
      {
        $('.disable2').attr('disabled', true);
        $('.disable2').val("");
      }
    }
  });
  $('.check3').on('click', function(event) {

    if ($(this).is(":checked")) {
      $('.disable3').attr('disabled', false);
    } else {
      {
        $('.disable3').attr('disabled', true);
        $('.disable3').val("");
      }
    }
  });
  $('.check4').on('click', function(event) {

    if ($(this).is(":checked")) {
      $('.disable4').attr('disabled', false);
    } else {
      {
        $('.disable4').attr('disabled', true);
        $('.disable4').val("");
      }
    }
  });
  $('.check5').on('click', function(event) {

    if ($(this).is(":checked")) {
      $('.disable5').attr('disabled', false);
    } else {
      {
        $('.disable5').attr('disabled', true);
        $('.disable5').val("");
      }
    }
  });
    $.validator.setDefaults({
     errorClass: 'invalid',
     validClass: "valid",
     errorPlacement: function (error, element) {
         $(element)
             .closest("form")
             .find("label[for='" + element.attr("id") + "']")
             .attr('data-error', error.text());
     }
 });

       $(".form").validate({

         rules: {
           "driver[password]": {
             required: function() {
               if ($('.workaround').val() == "true"){
                 return false;
               }
               else{
                 return true;
               }
               }
           },
           "driver[password_confirmation]": {
             required: function() {
               if ($('.workaround').val() == "true"){
                 return false;
               }
               else{
                 return true;
               }
               }
           },
           "driver[address_line1]": {
             required: true
           },
           "driver[city]": {
             required: true
           },
           "driver[zip]": {
             required: true
           }
         },
         messages: {
             "driver[password]": "Please enter a password",
             "driver[password_confirmation]": "Please enter a password confirmation",
             "driver[address_line1]": "Please enter a valid email address",
             "driver[city]": "Please enter the name of the city you live in",
             "driver[zip]": "Please enter a valid zip code",
          }

        });

        // timepicker for driver form
        $('.timepicker2').pickatime({
          interval: 15,
          min: [
            8, 30
          ],
          max: [16, 30]
        });
});
